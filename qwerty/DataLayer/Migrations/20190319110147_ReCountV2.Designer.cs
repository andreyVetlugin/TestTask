// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataLayer.Migrations
{
    [DbContext(typeof(BenefitsContext))]
    [Migration("20190319110147_ReCountV2")]
    partial class ReCountV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataLayer.Entities.DsPerc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgeDays");

                    b.Property<decimal>("Amount");

                    b.Property<int>("GenderType");

                    b.Property<DateTime>("Period");

                    b.HasKey("Id");

                    b.ToTable("DsPercs");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.KpCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(11);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("KpCodes");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.KpCodeLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("EgissoId");

                    b.Property<Guid>("KpCodeId");

                    b.Property<Guid>("MeasureUnitId");

                    b.Property<Guid>("PrivilegeId");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("KpCodeLinks");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.MeasureUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDecimal");

                    b.Property<string>("OkeiCode")
                        .HasMaxLength(4);

                    b.Property<string>("PositionCode")
                        .HasMaxLength(2);

                    b.Property<int>("PpNumber");

                    b.Property<string>("ShortTitle")
                        .HasMaxLength(16);

                    b.Property<string>("Title")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("MeasureUnits");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.PeriodType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PositionCode");

                    b.Property<int>("PpNumber");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("PeriodTypes");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.Privilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EgissoCode")
                        .HasMaxLength(4);

                    b.Property<Guid>("EgissoId");

                    b.Property<bool>("Monetization");

                    b.Property<Guid>("PeriodTypeId");

                    b.Property<Guid>("ProvisionFormId");

                    b.Property<string>("Title");

                    b.Property<bool>("UsingNeedCriteria");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("DataLayer.Entities.EGISSO.ProvisionForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(2);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ProvisionForms");
                });

            modelBuilder.Entity("DataLayer.Entities.ExtraPay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<decimal>("Ds");

                    b.Property<decimal>("DsPerc");

                    b.Property<decimal>("ExtraPension");

                    b.Property<decimal>("GosPension");

                    b.Property<decimal>("MaterialSupport");

                    b.Property<DateTime?>("OutDate");

                    b.Property<decimal>("Perks");

                    b.Property<Guid>("PersonRootId");

                    b.Property<decimal>("Premium");

                    b.Property<decimal>("Qualification");

                    b.Property<decimal>("Salary");

                    b.Property<decimal>("Secrecy");

                    b.Property<decimal>("TotalExtraPay");

                    b.Property<decimal>("TotalPension");

                    b.Property<decimal>("TotalPensionAndExtraPay");

                    b.Property<decimal>("UralMultiplier");

                    b.Property<Guid>("VariantId");

                    b.Property<decimal>("Vysluga");

                    b.HasKey("Id");

                    b.ToTable("ExtraPays");
                });

            modelBuilder.Entity("DataLayer.Entities.ExtraPayVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IgnoreGosPension");

                    b.Property<decimal>("MatSupportMultiplier");

                    b.Property<int>("Number");

                    b.Property<decimal>("PremiumPerc");

                    b.Property<decimal>("UralMultiplier");

                    b.Property<decimal>("VyslugaDivPerc");

                    b.Property<decimal>("VyslugaMultiplier");

                    b.HasKey("Id");

                    b.ToTable("ExtraPayVariants");
                });

            modelBuilder.Entity("DataLayer.Entities.Function", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("DataLayer.Entities.GetInfoLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionName");

                    b.Property<string>("ControllerName");

                    b.Property<DateTime>("Date");

                    b.Property<string>("HttpMethod");

                    b.Property<Guid>("PersonId");

                    b.Property<string>("RequestBody");

                    b.HasKey("Id");

                    b.ToTable("GetInfoLogs");
                });

            modelBuilder.Entity("DataLayer.Entities.GosPensionUpdate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<bool>("Approved");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Declined");

                    b.Property<Guid>("PersonInfoRootId");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("GosPensionUpdates");
                });

            modelBuilder.Entity("DataLayer.Entities.MinExtraPay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("MinExtraPays");
                });

            modelBuilder.Entity("DataLayer.Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Multiplier");

                    b.Property<string>("OrganizationName");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("DataLayer.Entities.PersonBankCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Number");

                    b.Property<DateTime?>("OutDate");

                    b.Property<Guid>("PersonRootId");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("ValidThru");

                    b.HasKey("Id");

                    b.ToTable("PersonBankCards");
                });

            modelBuilder.Entity("DataLayer.Entities.PersonInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AdditionalPensionId");

                    b.Property<string>("Address");

                    b.Property<bool>("Approved");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Birthplace");

                    b.Property<string>("CodeEgisso");

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("DistrictId");

                    b.Property<string>("DocNumber");

                    b.Property<string>("DocSeria");

                    b.Property<string>("DocTypeId");

                    b.Property<DateTime?>("DocsDestinationDate");

                    b.Property<DateTime?>("DocsSubmitDate");

                    b.Property<string>("Email");

                    b.Property<Guid>("EmployeeTypeId");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<string>("Issuer");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<Guid?>("NextId");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("OutdateTime");

                    b.Property<Guid>("PayoutTypeId");

                    b.Property<string>("PensionCaseNumber");

                    b.Property<DateTime?>("PensionEndDate");

                    b.Property<Guid>("PensionTypeId");

                    b.Property<string>("Phone");

                    b.Property<Guid>("RootId");

                    b.Property<string>("SNILS");

                    b.Property<char>("Sex");

                    b.Property<bool>("StoppedSolutions");

                    b.Property<string>("SurName");

                    b.HasKey("Id");

                    b.ToTable("PersonInfos");
                });

            modelBuilder.Entity("DataLayer.Entities.PostInfoLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("EntityRootId");

                    b.Property<byte>("Operation");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("PostInfoLogs");
                });

            modelBuilder.Entity("DataLayer.Entities.RecountDebt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Debt");

                    b.Property<DateTime?>("LastTimePay");

                    b.Property<decimal>("MonthlyPay");

                    b.Property<Guid>("PersonInfoRootId");

                    b.HasKey("Id");

                    b.ToTable("RecountDebts");
                });

            modelBuilder.Entity("DataLayer.Entities.Reestr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("InitDate");

                    b.Property<bool>("IsCompleted");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.ToTable("Reestrs");
                });

            modelBuilder.Entity("DataLayer.Entities.ReestrElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseSumm");

                    b.Property<string>("Comment")
                        .HasMaxLength(256);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("From");

                    b.Property<Guid?>("PersonBankCardId");

                    b.Property<Guid>("PersonInfoId");

                    b.Property<Guid>("PersonInfoRootId");

                    b.Property<Guid>("ReestrId");

                    b.Property<decimal>("Summ");

                    b.Property<DateTime?>("To");

                    b.HasKey("Id");

                    b.ToTable("ReestrElements");
                });

            modelBuilder.Entity("DataLayer.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Permissions");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataLayer.Entities.RoleUserLink", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("RoleUserLink");
                });

            modelBuilder.Entity("DataLayer.Entities.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreateTime");

                    b.Property<decimal>("DS");

                    b.Property<decimal>("DSperc");

                    b.Property<DateTime>("Destination");

                    b.Property<DateTime>("Execution");

                    b.Property<bool>("IsElite");

                    b.Property<DateTime?>("OutdateTime");

                    b.Property<Guid>("PersonInfoRootId");

                    b.Property<decimal>("TotalExtraPay");

                    b.Property<decimal>("TotalPension");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .HasMaxLength(255);

                    b.Property<string>("Name");

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLayer.Entities.WorkInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("EndDate");

                    b.Property<Guid>("FunctionId");

                    b.Property<Guid?>("NextId");

                    b.Property<Guid>("OrganizationId");

                    b.Property<DateTime?>("OutdateTime");

                    b.Property<Guid>("PersonInfoRootId");

                    b.Property<Guid>("RootId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("WorkInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
